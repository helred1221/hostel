// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Cliente {
  id        String   @id @default(cuid())
  nome      String
  email     String   @unique
  telefone  String
  documento String   @unique
  endereco  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  reservas  Reserva[]

  @@map("clientes")
}

model Quarto {
  id        String   @id @default(cuid())
  numero    String   @unique
  tipo      TipoQuarto
  preco     Float
  descricao String?
  ativo     Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  reservas  Reserva[]

  @@map("quartos")
}

model Reserva {
  id           String        @id @default(cuid())
  clienteId    String
  quartoId     String
  dataCheckIn  DateTime
  dataCheckOut DateTime
  status       StatusReserva @default(PENDENTE)
  valorTotal   Float
  observacoes  String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  
  cliente      Cliente       @relation(fields: [clienteId], references: [id], onDelete: Cascade)
  quarto       Quarto        @relation(fields: [quartoId], references: [id], onDelete: Cascade)

  @@map("reservas")
}

enum TipoQuarto {
  SOLTEIRO
  DUPLO
  SUITE
  FAMILIA
}

enum StatusReserva {
  PENDENTE
  CONFIRMADA
  CHECKIN
  CHECKOUT
  CANCELADA
}